#!/bin/bash
# $HOME/twm/info.lib
# Copyright (c) 2019-2024 Ueliton Alves Dos Santos
# Licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License

# Colors - font(formatting)_background
colors () {
	BLACK_BLACK='\033[00;30m'
	BLACK_CYAN='\033[01;36m\033[01;07m'
	BLACK_GREEN='\033[00;32m\033[01;07m'
	BLACK_GRAY='\033[01;30m\033[01;07m'
	BLACK_PINK='\033[01;35m\033[01;07m'
	BLACK_RED='\033[01;31m\033[01;07m'
	BLACK_YELLOW='\033[00;33m\033[01;07m'
	CYAN_BLACK='\033[36m'
	CYAN_CYAN='\033[01;36m\033[08;07m'
	COLOR_RESET='\033[00m'
	GOLD_BLACK='\033[33m'
	GREEN_BLACK='\033[32m'
	PURPLEi_BLACK='\033[03;34m\033[02;03m'
	PURPLEis_BLACK='\033[03;34m\033[02;04m'
	WHITE_BLACK='\033[37m'
	WHITEb_BLACK='\033[01;38m\033[05;01m'
}

G_T () {
    if [ -z "$LANGUAGE" ]; then
       LANGUAGE=2
    fi
    # Use awk to extract the appropriate translation based on the LANGUAGE variable
    translation=$(echo "$content" | awk -v lang="$LANGUAGE" -F'|' '
        NR==1 {
            # Store the index of each language in a variable
            for (i=1; i<=NF; i++) {
                if ($i ~ /en/) { idx_en = i; }
                else if ($i ~ /de/) { idx_de = i; }
                else if ($i ~ /es/) { idx_es = i; }
                else if ($i ~ /fr/) { idx_fr = i; }
                else if ($i ~ /hi/) { idx_hi = i; }
                else if ($i ~ /id/) { idx_id = i; }
                else if ($i ~ /it/) { idx_it = i; }
                else if ($i ~ /pl/) { idx_pl = i; }
                else if ($i ~ /pt/) { idx_pt = i; }
                else if ($i ~ /ro/) { idx_ro = i; }
                else if ($i ~ /ru/) { idx_ru = i; }
                else if ($i ~ /sr/) { idx_sr = i; }
                else if ($i ~ /zh/) { idx_zh = i; }
            }
        }
        NR > 1 {
            # If the corresponding line for the English translation is found, print the translation for the desired language
            if ($idx_en == "'"$1"'") {
                if (lang == 1) print $idx_de;
                else if (lang == 2) print $idx_en;
                else if (lang == 3) print $idx_es;
                else if (lang == 4) print $idx_fr;
                else if (lang == 5) print $idx_hi;
                else if (lang == 6) print $idx_id;
                else if (lang == 7) print $idx_it;
                else if (lang == 8) print $idx_pl;
                else if (lang == 9) print $idx_pt;
                else if (lang == 10) print $idx_ro;
                else if (lang == 11) print $idx_ru;
                else if (lang == 12) print $idx_sr;
                else if (lang == 13) print $idx_zh;
            }
        }
    ')

    # If no translation is found, return the original string
	if [ "$LANGUAGE" -eq '6' ]; then
		echo "${translation:-$1}" | awk -F'|' -v lang="$LANGUAGE" '{print $(lang)}' | awk 'NF'
	else
		echo "${translation:-$1}" | awk 'NF'
	fi
}

script_slogan () {
	colors="10 9 8 7 6 5 4 3 2 1"
	t=339
	w=59
	m=89
	author="$(G_T "author"):\nueliton@disroot.org 2019 - 2024"
	collaborator="$(G_T "collaborator"):\n	@_hviegas"
	for i in $colors; do
		clear
		t=$((t - 27))
		w=$((w + 1))
		m=$((m - 2))
		printf "\033[1;38;5;${t}m  ╔══╗╔╗╔══╗╔══╗╔══╗╔══╗
			  ╚╗╔╝╠╣╚╗╔╝║╔╗║║╔╗║║══╣
			  ${BLACK_BLACK}═\033[1;38;5;${t}m║║${BLACK_BLACK}═\033[1;38;5;${t}m║║${BLACK_BLACK}═\033[1;38;5;${t}m║║${BLACK_BLACK}═\033[1;38;5;${t}m║╔╗║║║║║╠══║
			  ${BLACK_BLACK}═\033[1;38;5;${t}m╚╝${BLACK_BLACK}═\033[1;38;5;${t}m╚╝${BLACK_BLACK}═\033[1;38;5;${t}m╚╝${BLACK_BLACK}═\033[1;38;5;${t}m╚╝╚╝╚╝╚╝╚══╝\033[1;38;5;${w}m
			       ╔╦═╦╗╔══╗╔══╗
			       ║║║║║║╔╗║║╚╝╣
			       ║║║║║║╔╗║║║╗║
			       ╚═╩═╝╚╝╚╝╚╝╚╝\033[1;38;5;${m}m
			  ╔═╦═╗╔══╗╔══╗╔══╗╔══╗
			  ║║║║║║╔╗║║╔═╝║╚╝╣║╔╗║
			  ║║║║║║╔╗║║╚═╗║║╗║║╚╝║
			  ╚╩═╩╝╚╝╚╝╚══╝╚╝╚╝╚══╝
			  ${COLOR_RESET}\n" | sed 's/\t\t\t//g'

		printf "\033[1;38;5;${i}m${author}\n\033[02m${collaborator}\n${COLOR_RESET}\n"
		sleep 0.3s
	done
}

time_exit () {
	(
	 local FPID=$(echo "$!"|grep -o -E '([0-9]{2,6})')
	 for TE in $(seq "$@" -1 0) ; do
		local RPID=$(ps ax -o pid=|grep -o "$FPID")
		if [ -z "$RPID" ] ; then
			local TE=0
			break &>/dev/null
		elif [ "$TE" -lt 1 ] ; then
			kill -s PIPE $FPID &>/dev/null
			kill -15 $FPID &>/dev/null
			printf "${WHITEb_BLACK}$(G_T "Command execution was interrupted")!${COLOR_RESET}\n"
			local TE=0
			break &>/dev/null
		fi
			sleep 1s
	 done
	)
}

link () {
	(
	 w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "$URL/$1" -o user_agent="$(shuf -n1 userAgent.txt)" >$2
	)  </dev/null &>/dev/null &
	time_exit 20
}

hpmp () {
# options: -fix or -now
# Go to /train page
	if echo "$@"|grep -q '\-fix'; then
		(
		 w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "$URL/train" -o user_agent="$(shuf -n1 userAgent.txt)" >$TMP/TRAIN
		)  </dev/null &>/dev/null &
		time_exit 20
# Fixed HP and MP.
# Needs to run -fix at least once before
		FIXHP=$(grep -o -E '\(([0-9]+)\)' $TMP/TRAIN|sed 's/[()]//g')
		FIXMP=$(grep -o -E ': [0-9]+' $TMP/TRAIN | sed -n '5s/: //p')
	fi

# $NOW/HP|MP can be obtained from any SRC file
	NOWHP=$(grep -o -E "<img src[=]'/images/icon/health.png' alt[=]'hp'/> <span class[=]'(dred|white)'>[ ]?[0-9]{1,7}[ ]?</span> \| <img src[=]'/images/icon/mana.png' alt[=]'mp'/>" $TMP/SRC|tr -c -d "[[:digit:]]")
	NOWMP=$(grep -o -E "</span> \| <img src='/images/icon/mana.png' alt='mp'/>[ ]?[0-9]{1,7}[ ]?</span><div class='clr'></div></div>" $TMP/SRC|tr -c -d "[[:digit:]]")

# Calculates percentage of HP and MP.
# Needs to run -fix at least once before
	HPPER=$(awk -v nowhp="$NOWHP" -v fixhp="$FIXHP" 'BEGIN { printf "%.3f", nowhp / fixhp * 100 }'|awk '{printf "%.2f\n", $1}')
	MPPER=$(awk -v nowmp="$NOWMP" -v fixmp="$FIXMP" 'BEGIN { printf "%.3f", nowmp / fixmp * 100 }'|awk '{printf "%.2f\n", $1}')
# e.g.
#	printf %b "HP ❤️ $NOWHP - $(printf "%.2f" "${HPPER}")% | MP Ⓜ️ $NOWMP - $(printf "%.2f" "${MPPER}")%\n"

}

messages_info () {
	echo " ⚔️ - $(G_T "Titans War Macro") - ⚔️ " > $TMP/msg_file

	printf " -------- $(G_T "MAIL") --------\n" >> $TMP/msg_file
	(
	 w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -dump "${URL}/mail" -o user_agent="$(shuf -n1 $TMP/userAgent.txt)"|tee $TMP/info_file|sed -n '/[|]\ mp/,/\[arrow\]/p'|sed '1,1d;$d;6q' >> $TMP/msg_file
	) </dev/null &>/dev/null &
	time_exit 17

	printf " -------- $(G_T "CHAT TITANS") --------\n" >> $TMP/msg_file
	(
	 w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -dump "${URL}/chat/titans/changeRoom" -o user_agent="$(shuf -n1 $TMP/userAgent.txt)"|sed -n '/\(\»\)/,/\[chat\]/p'|sed '$d;4q' >> $TMP/msg_file
	) </dev/null &>/dev/null &
	time_exit 17

	printf " -------- $(G_T "CHAT CLAN") --------\n" >> $TMP/msg_file
	(
	 w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -dump "${URL}/chat/clan/changeRoom" -o user_agent="$(shuf -n1 $TMP/userAgent.txt)"|sed -ne '/\[[^a-z]\]/,/\[chat\]/p'|sed '$d;4q' >> $TMP/msg_file
	) </dev/null &>/dev/null &
	time_exit 17

	sed -i 's/\[0\]/🔴/g;s/\[0-off\]/⭕/g;s/\[1\]/🔵/g;s/\[1-off\]/🔘/g' msg_file >> $TMP/msg_file

	local TRAIN="~/twm/.${UR}/TRAIN"
	if [ ! -e "~/twm/.${UR}/TRAIN" ] || find "$TRAIN" -mmin +30 >/dev/null 2>&1; then
		hpmp -fix
	fi

	printf %b "\033[02mHP ❤️ $NOWHP - ${HPPER}% | MP Ⓜ️ $NOWMP - ${MPPER}%${COLOR_RESET}\n" >> $TMP/msg_file

#	sed :a;N;s/\n//g;ta |
	printf "${GREEN_BLACK}${ACC}$(grep -o -E '(lvl [0-9]{1,2} \| g [0-9]{1,3}[^0-9]{0,1}[0-9]{0,3}[A-Za-z]{0,1} \| s [0-9]{1,3}[^0-9]{0,1}[0-9]{0,3}[A-Za-z]{0,1})' $TMP/info_file|sed 's/lvl/\ lvl/g;s/g/\ g/g;s/s/\ s/g')${COLOR_RESET}\n" >> $TMP/msg_file
}
